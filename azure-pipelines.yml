# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java



pool:
  vmImage: 'ubuntu-latest'

variables:
- group: android-build-variables
steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleRelease'
- task: CopyFiles@2
  inputs:
     contents: '**/*.apk'
     targetFolder: '$(build.artifactStagingDirectory'

- task: PublishBuildArtifacts@1

- task: AppCenterDistribute@3
  inputs:
    serverEndpoint: 'Sharnitha_Appcenter'
    appSlug: 'Sharnithadevops/Sharnitha Android'
    appFile: '$(Build.SourcesDirectory)'
    symbolsOption: 'Android'
    releaseNotesOption: 'input'
    releaseNotesInput: 'My_firstappcente'
    destinationType: 'groups'